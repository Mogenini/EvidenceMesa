import mesa
from mesa.space import MultiGrid
import numpy as np
import seaborn as sns

import model
import agents
from model import CityModel



data = {
    "Buildings": [
        (2, 2), (4, 2), (5, 2), (6, 2), (7, 2), (8, 2), (10, 2), (11, 2), (3, 2),
        (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3), (9, 3), (10, 3), (11, 3),
        (2, 4), (3, 4), (4, 4), (5, 4), (6, 4), (7, 4), (8, 4), (9, 4), (10, 4),
        (2, 5), (3, 5), (4, 5), (5, 5), (7, 5), (8, 5), (9, 5), (10, 5), (11, 5),
        (2, 8), (3, 8), (4, 8), (7, 8), (9, 8), (10, 8), (11, 8), (2, 9), (3, 9),
        (4, 9), (7, 9), (8, 9), (9, 9), (10, 9), (11, 9), (2, 10), (3, 10),
        (7, 10), (8, 10), (9, 10), (10, 10), (2, 11), (3, 11), (4, 11), (7, 11),
        (8, 11), (9, 11), (10, 11), (11, 11), (2, 16), (3, 16), (4, 16), (5, 16),
        (8, 16), (9, 16), (10, 16), (11, 16), (3, 17), (4, 17), (5, 17), (8, 17),
        (9, 17), (10, 17), (11, 17), (2, 18), (3, 18), (4, 18), (5, 18), (8, 18),
        (9, 18), (10, 18), (11, 18), (2, 19), (3, 19), (4, 19), (5, 19), (8, 19),
        (9, 19), (10, 19), (11, 19), (2, 20), (3, 20), (4, 20), (9, 20), (10, 20),
        (11, 20), (2, 21), (3, 21), (4, 21), (5, 21), (8, 21), (9, 21), (10, 21),
        (11, 21), (13, 13), (14, 13), (13, 14), (14, 14), (16, 2),(16, 3),(16, 4),
        (16, 5),(16, 8), (16, 9), (16, 11), (16,16), (16,17), (16,20),(16,21),
        (17,2), (17,4),(17,5),(17,8),(17,9),(17,10),(17,11),(17,16),(17,20),(17,21),
        (18,16),(18,17),(18,20),(18,21),(19,16),(19,21),(20,2),(20,3),(20,5),(20,8),
        (20,9),(20,10),(20,11),(20,16),(20,17),(20,20),(20,21),(21,2),(21,3),(21,4),
        (21,5),(21,8),(21,10),(21,11),(21,16),(21,17),(21,20),(21,21)

    ],
    "Parking_Lots": [
        [(2, 3), False], [(9, 2), False], [(11, 4), False], [(6, 5), False],
        [(8, 8), False], [(4, 10), False], [(11, 10), False], [(17, 3), False],
        [(20, 4), False], [(21, 9), 1], [(2, 17), False], [(5, 20), False],
        [(8, 20), False], [(17, 17), 1], [(19, 17), False], [(19, 20), False]
    ],
    "Semaphores": [
        [(17, 0), True], [(18, 2), False],
        [(17, 1), True], [(19, 2), False],
        [(2, 6), True], [(22, 5), False],
        [(2, 7), True], [(23, 5), False],
        [(7, 6), True], [(0, 8), False],
        [(7, 7), True], [(1, 8), False],
        [(21, 6), True], [(5, 8), False],
        [(21, 7), True], [(6, 8), False],
        [(16, 18), True], [(14, 17), False],
        [(16, 19), True], [(15, 17), False]
    ], 

    "Down":[(1, 0) (2, 0) (3, 0) (4, 0) (5, 0) (6, 0) (7, 0) (8, 0) (9, 0) (10, 0) (11, 0) (12, 0) (13, 0) (14, 0) (15, 0) (16, 0) (17, 0) (18, 0) (19, 0) (20, 0) (21, 0) (22, 0)
(1, 1) (2, 1) (3, 1) (4, 1) (5, 1) (6, 1) (7, 1) (8, 1) (9, 1) (10, 1) (11, 1) (12, 1) (13, 1) (14, 1) (15, 1) (16, 1) (17, 1) (18, 1) (19, 1) (20, 1) (21, 1) (22, 1)
(16, 6) (17, 6) (18, 6) (19, 6) (20, 6) (21, 6) (22, 6) (16, 7) (17, 7) (18, 7) (19, 7) (20, 7) (21, 7) (22, 7)
(2, 12) (3, 12) (4, 12) (5, 12) (6, 12) (7, 12) (8, 12) (9, 12) (10, 12) (11, 12) (12, 12) (2, 13) (3, 13) (4, 13) (5, 13) (6, 13) (7, 13) (8, 13) (9, 13) (10, 13) (11, 13)
(16, 12) (17, 12) (18, 12) (19, 12) (20, 12) (21, 12) (22, 12) (16, 13) (17, 13) (18, 13) (19, 13) (20, 13) (21, 13) (22, 13)
], 
    "Up":[(1, 22) (2, 22) (3, 22) (4, 22) (5, 22) (6, 22) (7, 22) (8, 22) (9, 22) (10, 22) (11, 22) (12, 22) (13, 22) (14, 22) (15, 22) (16, 22) (17, 22) (18, 22) (19, 22) (20, 22) (21, 22) (22, 22)
(1, 23) (2, 23) (3, 23) (4, 23) (5, 23) (6, 23) (7, 23) (8, 23) (9, 23) (10, 23) (11, 23) (12, 23) (13, 23) (14, 23) (15, 23) (16, 23) (17, 23) (18, 23) (19, 23) (20, 23) (21, 23) (22, 23)
(1, 14) (2, 14) (3, 14) (4, 14) (5, 14) (6, 14) (7, 14) (8, 14) (9, 14) (10, 14) (11, 14) (1, 15) (2, 15) (3, 15) (4, 15) (5, 15) (6, 15) (7, 15) (8, 15) (9, 15) (10, 15) (11, 15)
(16, 14) (17, 14) (18, 14) (19, 14) (20, 14) (21, 14) (22, 14) (16, 15) (17, 15) (18, 15) (19, 15) (20, 15) (21, 15) (22, 15)
(1, 6) (2, 6) (3, 6) (4, 6) (5, 6) (6, 6) (7, 6) (8, 6) (9, 6) (10, 6) (11, 6) (12, 6) (1, 7) (2, 7) (3, 7) (4, 7) (5, 7) (6, 7) (7, 7) (8, 7) (9, 7) (10, 7) (11, 7) (12, 7)
(15, 18) (16, 18) (17, 18) (18, 18) (19, 18) (20, 18) (21, 18) (22, 18) (15, 19) (16, 19) (17, 19) (18, 19) (19, 19) (20, 19) (21, 19) (22, 19)
],

    "Right":[(22, 1) (22, 2) (22, 3) (22, 4) (22, 5) (22, 6) (22, 7) (22, 8) (22, 9) (22, 10) (22, 11) (22, 12) (22, 13) (22, 14) (22, 15) (22, 16) (22, 17) (22, 18) (22, 19) (22, 20) (22, 21) (22, 22)
(23, 1) (23, 2) (23, 3) (23, 4) (23, 5) (23, 6) (23, 7) (23, 8) (23, 9) (23, 10) (23, 11) (23, 12) (23, 13) (23, 14) (23, 15) (23, 16) (23, 17) (23, 18) (23, 19) (23, 20) (23, 21) (23, 22)
(14, 1) (14, 2) (14, 3) (14, 4) (14, 5) (14, 6) (14, 7) (14, 8) (14, 9) (14, 10) (14, 11) (15, 1) (15, 2) (15, 3) (15, 4) (15, 5) (15, 6) (15, 7) (15, 8) (15, 9) (15, 10) (15, 11)
(14, 16) (14, 17) (14, 18) (14, 19) (14, 20) (14, 21) (14, 22) (15, 16) (15, 17) (15, 18) (15, 19) (15, 20) (15, 21) (15, 22)
(18, 7) (18, 8) (18, 9) (18, 10) (18, 11) (18, 12) (19, 7) (19, 8) (19, 9) (19, 10) (19, 11) (19, 12)
],


    "Left":[(0, 1) (0, 2) (0, 3) (0, 4) (0, 5) (0, 6) (0, 7) (0, 8) (0, 9) (0, 10) (0, 11) (0, 12) (0, 13) (0, 14) (0, 15) (0, 16) (0, 17) (0, 18) (0, 19) (0, 20) (0, 21) (0, 22)
(1, 1) (1, 2) (1, 3) (1, 4) (1, 5) (1, 6) (1, 7) (1, 8) (1, 9) (1, 10) (1, 11) (1, 12) (1, 13) (1, 14) (1, 15) (1, 16) (1, 17) (1, 18) (1, 19) (1, 20) (1, 21) (1, 22)
(6, 15) (6, 16) (6, 17) (6, 18) (6, 19) (6, 20) (6, 21) (6, 22) (7, 15) (7, 16) (7, 17) (7, 18) (7, 19) (7, 20) (7, 21) (7, 22)
(6, 7) (6, 8) (6, 9) (6, 10) (6, 11) (6, 12) (7, 7) (7, 8) (7, 9) (7, 10) (7, 11) (7, 12)
(12, 16) (12, 17) (12, 18) (12, 19) (12, 20) (12, 21) (12, 22) (13, 16) (13, 17) (13, 18) (13, 19) (13, 20) (13, 21) (13, 22)
(12, 1) (12, 2) (12, 3) (12, 4) (12, 5) (12, 6) (12, 7) (12, 8) (12, 9) (12, 10) (12, 11) (13, 1) (13, 2) (13, 3) (13, 4) (13, 5) (13, 6) (13, 7) (13, 8) (13, 9) (13, 10) (13, 11)
(18, 1) (18, 2) (18, 3) (18, 4) (18, 5) (18, 6) (19, 1) (19, 2) (19, 3) (19, 4) (19, 5) (19, 6)
]


}

ModelCity = model.CityModel(1,24,24,data)
#model = CityModel(n=5, width=10, height=10, dataStructure=data)

for _ in range(5):
    ModelCity.step()